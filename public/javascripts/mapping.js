
var cedisMap={};var InteractiveMap=Class.create({initialize:function(id,options){var defaults={latitude:49.1,longitude:16.3,zoom:5,dateStamp:'20121027',locale:'de'};if(options!=null){this.options=options;}else{this.options={};}
if(!this.options.latitude){this.options.latitude=defaults.latitude;}
if(!this.options.longitude){this.options.longitude=defaults.longitude;}
if(!this.options.zoom){this.options.zoom=defaults.zoom;}
if(!this.options.dateStamp){this.options.dateStamp=defaults.dateStamp;}
this.currentLoadPage=0;this.loadPageNumber=0;this.loading=true;this.options.urlRoot=window.location.pathname.split('/')[1]=='archiv'?'/archiv':'';var baseUrl=this.options.urlRoot+'/'+this.options.locale+'/webservice/locations/'+this.options.dateStamp
this.options.indexURL=baseUrl+'.json';this.options.dataURL=baseUrl+'/page';cedisMap.locationSearch=this;if(!this.options.images){this.options.images=new Hash();this.options.images['default']=new google.maps.MarkerImage(this.options.urlRoot+'/images/test_markers/interview_marker.png');['interview','place_of_birth','deportation_location','forced_labor_location','forced_labor_camp','forced_labor_company','return_location','postwar_camp','home_location'].each(function(icon){cedisMap.locationSearch.options.images[icon]=new google.maps.MarkerImage(cedisMap.locationSearch.options.urlRoot+'/images/test_markers/'+icon+'_marker.png');});}
if(!this.options.colors){this.options.colors=new Hash();this.options.colors['default']='red';this.options.colors['interview']='green';this.options.colors['place_of_birth']='blue';this.options.colors['home_location']='blue';this.options.colors['return_location']='blue';this.options.colors['postwar_camp']='blue';this.options.colors['deportation_location']='red';this.options.colors['forced_labor_location']='red';this.options.colors['forced_labor_camp_location']='red';this.options.colors['forced_labor_company_location']='red';}
this.boundsPerParameters=(this.options.mapBounds)?true:false;var center=(this.boundsPerParameters)?this.options.mapBounds.getCenter():new google.maps.LatLng(this.options.latitude,this.options.longitude);var mapOptions={zoom:this.options.zoom,center:center,mapTypeId:google.maps.MapTypeId.TERRAIN,mapTypeControlOptions:{position:google.maps.ControlPosition.TOP_LEFT},streetViewControl:false};this.mapContainer=$(id);this.map=new google.maps.Map(this.mapContainer,mapOptions);if(this.boundsPerParameters){this.map.fitBounds(this.options.mapBounds);}
this.progress=new progressBar({colorBar:'#990000',background:'#B2AFA1'});$(id).appendChild(this.progress.getDiv());this.progress.getDiv().style.bottom='60px';var clusterOptions=this.options.cluster||{};this.clusterManager=new ClusterManager(this.map,clusterOptions);this.loadAllLocations();return this.map;},setMapBounds:function(bounds){if((!this.boundsPerParameters)&&(bounds.intersects)){this.map.fitBounds(bounds);}},loadAllLocations:function(){new Ajax.Request(this.options.indexURL,{method:'GET',onSuccess:this.initializeProgressBar.bind(this)});},initializeProgressBar:function(response){this.loadPageNumber=response.responseJSON.pages;this.progress.start(this.loadPageNumber);this.currentLoadPage=0;this.loading=true;this.retrieveLocationsBatch();},retrieveLocationsBatch:function(){this.currentLoadPage=this.currentLoadPage+1;if(this.currentLoadPage<=this.loadPageNumber){var that=this;new Ajax.Request((this.options.dataURL+'.'+this.currentLoadPage+'.json'),{method:'GET',onSuccess:function(response){that.loadLocationsBatch(response.responseJSON.locations.toArray())}});}else{this.loading=false;this.progress.updateBar(1);this.progress.hide();this.clusterManager.addClustersToMap();this.checkForIntro();}},loadLocationsBatch:function(remainingLocations){if(remainingLocations){var numLoaded=0,locationToLoad;while(remainingLocations.length>0&&numLoaded<500){numLoaded++;locationToLoad=remainingLocations.pop();if(isNaN(locationToLoad.latitude)||isNaN(locationToLoad.longitude)||Number(locationToLoad.latitude)==0||Number(locationToLoad.longitude)==0){continue;}
var referenceClass=this.locationReference(locationToLoad.referenceType,locationToLoad.locationType);var locationInfo=this.locationInfo(locationToLoad,referenceClass);var interviewURL=this.options.urlRoot+'/interviews/'+locationToLoad.interviewId;this.clusterManager.addLocation(locationToLoad.location,new google.maps.LatLng(locationToLoad.latitude,locationToLoad.longitude),locationToLoad.interviewId,locationInfo,locationToLoad.region,locationToLoad.country,referenceClass,interviewURL);}}
if(remainingLocations&&remainingLocations.length>0){setTimeout((function(){this.loadLocationsBatch(remainingLocations)}).bind(this),0);}else{this.progress.updateBar(1);setTimeout(this.retrieveLocationsBatch.bind(this),0);}},locationInfo:function(location,referenceClass){var reference=this.translate(referenceClass);var info='';info+='<p class="interviewReference">'+reference+'&nbsp;'+location.interviewee+' ('+location.interviewId+')</p>';info+='<p class="referenceDetails">';info+=location.interviewType.capitalize()+', '+location.language+(location.translated?', '+I18n.t('status.translated'):'')+'</p>';return info;},locationReference:function(refStr,type){switch(type){case'Camp':switch(refStr){case'forced_labor_location':return'forced_labor_camp';case'return_location':return'postwar_camp';}
break;case'Company':if(refStr=='forced_labor_location')return'forced_labor_company';break;}
return refStr;},translate:function(str){translation_map={forced_labor_location:I18n.t('locations.types.forced_labor_location')+' -',forced_labor_camp:I18n.t('locations.types.forced_labor_camp')+' -',forced_labor_company:I18n.t('locations.types.forced_labor_company')+' -',deportation_location:I18n.t('locations.types.deportation_location')+' -',place_of_birth:I18n.t('locations.types.place_of_birth')+' -',home_location:I18n.t('locations.types.home_location_in_map')+' -',return_location:I18n.t('locations.types.return_location')+' -',postwar_camp:I18n.t('locations.types.postwar_camp')+' -',interview:I18n.t('locations.types.interview_in_map')};return translation_map[str];},checkForIntro:function(){if(this.options.introId&&this.options.introURL&&(!readMapConfigurationCookie().intro)){this.showTutorial();}},showTutorial:function(){var _this=cedisMap.locationSearch;var introTab=$(_this.options.introId);new Ajax.Updater(_this.options.introId,_this.options.introURL,{method:'GET',evalScripts:true,onComplete:(function(){_this.initTutorial();})});},initTutorial:function(){var _this=cedisMap.locationSearch;new Effect.Appear(_this.options.introId);setupFilters('#'+_this.options.introId+' .map_filter_off');}});function mapSetup(id,options){var storedConfig=readMapConfigurationCookie();var parameters=location.search.parseQuery([separator='&']);var filterSettings=location.search.parseQuery([separator='&']).filters;var filterOptions=[];if(filterSettings){filterSettings.scan(/[_a-z]+/,function(filter){filterOptions.push(filter)});}else{filterOptions=storedConfig.filters||[];}
var clusterOption=storedConfig.clusters||0;var bounds=null;var sw=parseGeoLocParameter(parameters.swcorner);var ne=parseGeoLocParameter(parameters.necorner);if(sw&&ne){bounds=new google.maps.LatLngBounds(sw,ne);}
if(options==null){options={};}
if(!options.mapBounds){options.mapBound=bounds;}
if(!options.cluster){options.cluster={filters:filterOptions.flatten(),clusters:clusterOption};}
new InteractiveMap(id,options);}
function parseGeoLocParameter(param){var latLng=null;if(param&&param.length>0){var ll=param.split(/\s*,\s*/);var lat=ll[0];var lng=ll[1];latLng=(lat&&lng)?new google.maps.LatLng(lat,lng):null;}
return latLng;}
progressBar=function(opts){var options=progressBar.combineOptions(opts,{height:'1.75em',width:'200px',top:'32px',right:'5px',colorBar:'#68C',background:'#FFF',fontFamily:'Arial, sans-serif',fontSize:'12px'});var current=0;var total=0;var shadow='1px 1px #888';var overlay=document.createElement('div');overlay.style.width='9999px';overlay.style.height='9999px';overlay.style.cssText='opacity: 0.85; background-color: #F1F1EB;';overlay.style.display='block';overlay.style.textAlign='center';overlay.style.padding='360px 950px 950px 245px';overlay.style.zIndex='1000';overlay.style.position='relative';var div=document.createElement('div');div.id='pg_div';var dstyle=div.style;div.style.cssText='box-shadow: '+shadow+'; '
+'-webkit-box-shadow: '+shadow+'; '
+'-moz-box-shadow: '+shadow+'; ';dstyle.display='none';dstyle.width=options.width;dstyle.height=options.height;dstyle.marginRight='6px';dstyle.border='1px solid #BBB';dstyle.background=options.background;dstyle.fontSize=options.fontSize;dstyle.position='relative';dstyle.textAlign='left';var text=document.createElement('div');text.id='pg_text';var tstyle=text.style;tstyle.position='absolute';tstyle.color='#FFF';tstyle.fontWeight='bold';tstyle.width='100%';tstyle.border='5px';tstyle.textAlign='center';var bar=document.createElement('div');bar.id='pg_bar';bar.style.height=options.height;bar.style.backgroundColor=options.colorBar;div.appendChild(text);div.appendChild(bar);overlay.appendChild(div);var draw=function(mapDiv){overlay.style.cssText=control.style.cssText+'z-index: 20; position: absolute; '+'top: '+options.top+'; right: '+options.right+'; ';}
var start=function(total_){if(parseInt(total_)===total_&&total_>0){total=total_;current=0;bar.style.width='0%';text.innerHTML='Loading...';div.style.display='block';}
return total;}
var updateBar=function(increase){if(parseInt(increase)===increase&&total){current+=parseInt(increase);if(current>total){current=total;}else if(current<0){current=0;}
var percent=Math.round((current/total)*100)+'%';bar.style.width=percent;text.innerHTML=percent+' loaded';}else if(!total){return total;}
return current;}
var hide=function(){new Effect.Fade(overlay,{duration:1.2});}
var getDiv=function(){return overlay;}
var getTotal=function(){return total;}
var setTotal=function(total_){total=total_;}
var getCurrent=function(){return current;}
var setCurrent=function(current_){return updateBar(current_-current);}
return{draw:draw,start:start,updateBar:updateBar,hide:hide,getDiv:getDiv,getTotal:getTotal,setTotal:setTotal,getCurrent:getCurrent,setCurrent:setCurrent}}
progressBar.combineOptions=function(overrides,defaults){var result={};if(!!overrides){for(var prop in overrides){if(overrides.hasOwnProperty(prop)){result[prop]=overrides[prop];}}}
if(!!defaults){for(prop in defaults){if(defaults.hasOwnProperty(prop)&&(result[prop]===undefined)){result[prop]=defaults[prop];}}}
return result;}