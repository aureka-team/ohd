<?xml version="1.0"?>
<project name="hd" basedir="../" default="build-debug">
	<!-- Define variables/paths used in this build script -->
	<xmlproperty file="./${ant.project.name}.xml" />
	<property file="./build/build.properties" />

	<!--
		 Have you edit the properties file to make sure the paths are right oo your system?
	-->
	<target name="check-properties">
		<fail unless="asdoc.exe">The "asdoc.exe" property must be set in ${build.dir}/build.properties.</fail>
		<fail unless="compc.exe">The "compc.exe" property must be set in ${build.dir}/build.properties.</fail>
		<fail unless="mxmlc.exe">The "mxmlc.exe" property must be set in ${build.dir}/build.properties.</fail>
		<fail unless="application.package">The "package" property must be set in settings.xml.</fail>
		<fail unless="application.class">The "class" property must be set in settings.xml.</fail>
	</target>

	<!--
		 Compile the plugin in debug mode.
	-->
	<target name="clean-debug">
		<delete dir="${debug.dir}">
			<include name="*.swf"/>
		</delete>
	</target>

	<!--
		 Compile the plugin in debug mode.
	-->
	<target name="clean-release">
		<delete dir="">
			<include name="*.swf"/>
		</delete>
	</target>

	<!--
		 Generate ASDoc output for the library
	-->
	<target name="create-asdoc" depends="check-properties">
		<!-- Clean out the contents of the doc directory, without delete "docs" -->
		<!--
			 <delete includeemptydirs="true">
			 <fileset dir="${docs.dir}" includes="**/*" />
			 </delete>
		-->

		<exec executable="${asdoc.exe}" spawn="no">
			<!-- Place the documentation in the "docs" directory -->
			<arg line="-output '${docs.dir}'" />

			<!-- Specify the main source path as "src" -->
			<arg line="-compiler.source-path '${src.dir}'" />

			<!-- Include the necessary framework libraries in the class path -->
			<arg line="-compiler.library-path '${flexsdk.lib.dir}'" />
			<arg line="-compiler.library-path '${lib.dir}'" />

			<!-- Document all of the classes in the "src" tree -->
			<arg line="-doc-sources '${src.dir}' " />

			<!-- Include the library name in the window title -->
			<arg line="-window-title 'JW Player Plugin - ${application.title}' "/>

			<!-- Ignore missing type declarations -->
			<arg line="-warnings=false"/>
		</exec>

		<exec executable="${browser}" spawn="yes">
			<arg line="'file://${docs.dir}/index.html'" />  
		</exec>
	</target>

	<!--
		 Compile the plugin in debug mode.
	-->
	<target name="debug-swf">
		<exec executable="${mxmlc.exe}" dir="${basedir}">
			<!-- Point to the main test runner's application mxml file -->
			<arg line="'${src.dir}/${package}/${class}.as'" />

			<!-- Place the built .swf file in the "bin" directory -->
			<arg line="-output '${debug.dir}/${swf}.swf'" />

			<!-- Define source directories for "src" and "tests" -->
			<arg line="-compiler.source-path '${src.dir}'" />

			<!-- Include the necessary framework libraries in the class path -->
			<arg line="-compiler.library-path '${flexsdk.lib.dir}'" />
			<arg line="-compiler.library-path '${lib.dir}'" />


			<!-- Include locale-specific items in the path -->
			<arg line="-locale ${flexsdk.locale}" />
			<arg line="-compiler.library-path '${flexsdk.locale.dir}'" />

			<!-- Enable incremental compilation -->
			<arg line="-incremental=true" />

			<!-- Enable debugging -->
			<arg line="-debug=true" />

			<!-- Ignore missing type definitions -->
			<arg line="-warnings=false" />

			<!-- Use local filesystem -->
			<arg line="-use-network=false" />
		</exec>
	</target>

	<target name="release-swf">
		<exec executable="${mxmlc.exe}" dir="${basedir}">
			<!-- Point to the main test runner's application mxml file -->
			<arg line="'${src.dir}/${package}/${class}.as'" />

			<!-- Place the built .swf file in the "bin" directory -->
			<arg line="-output '${swf}.swf'" />

			<!-- Define source directories for "src" and "tests" -->
			<arg line="-compiler.source-path '${src.dir}'" />

			<!-- Include the necessary framework libraries in the class path -->
			<arg line="-compiler.library-path '${flexsdk.lib.dir}'" />
			<arg line="-compiler.library-path '${lib.dir}'" />

			<!-- Include locale-specific items in the path -->
			<arg line="-locale ${flexsdk.locale}" />
			<arg line="-compiler.library-path '${flexsdk.locale.dir}'" />

			<!-- Optimize for size -->
			<arg line="-optimize=true" />

			<!-- Ignore missing type definitions -->
			<arg line="-warnings=false" />
			
			<!-- -->
			<arg line="-load-externs='${lib.dir}/sdk-classes.xml'" />
		</exec>
	</target>

	<target name="build-debug" depends="check-properties, clean-debug">
		<antcall target="debug-swf">
			<param name="package" value="${application.package}" />
			<param name="class" value="${application.class}" />
			<param name="swf" value="${application.class}" />
		</antcall>
	</target>

	<target name="build-release" depends="check-properties, clean-release">
		<antcall target="release-swf">
			<param name="package" value="${application.package}" />
			<param name="class" value="${application.class}" />
			<param name="swf" value="${application.class}" />
		</antcall>
	</target>
</project>