<div id="userFilters" class="fragmentTitle">
  <h2>Benutzer filtern nach:</h2>
  <ul>
      <label for="workflow_state">Registrierungsstatus</label>
      <% seloptions = options_for_select((UserRegistration::STATES + ['all']).map{|o| [t(o, :scope => 'devise.workflow_states'), o]}, :selected => params['workflow_state']) -%>
      <%= select_tag 'workflow_state', seloptions, :class => 'filter' %>
    </li>
    <li id="submit_filters" style="display: none;">
      <%= button_to_function 'Auswahl aktualisieren', 'filterSubmit();' %>
    </li>
  </ul>
</div>

<% javascript_tag do -%>

var filterElements = $$('#userFilters .filter');
filterElements.each(function(filter){
  new Form.Element.Observer(filter, 1, onFilterChange);
});
var currentFilters = getFilterSettings();

function filterSubmit() {
  currentFilters = getFilterSettings();
  var queryURL = window.location.pathname + '?' + currentFilters.toQueryString();
  new Ajax.Updater('innerContent', queryURL, {
      method: 'get',
      onLoading: function() { new Effect.Appear('shades', { from: 0, to: 0.4 }); $('submit_filters').hide(); },
      onComplete: function() { new Effect.Fade('shades', { from: 0.4, to: 0 }); }
  });
};

function onFilterChange() {
  if(filterChanged()) {
    $('submit_filters').show();
  }
};

function getFilterSettings() {
  var settings = new Hash();
  filterElements.each(function(filter){
    var filterName = filter.id;
    var filterValue = Form.Element.getValue(filterName);
    settings.set(filterName, filterValue);
  });
  return settings;
};

function filterChanged() {
  var settings = getFilterSettings();
  var changed = false;
  filterElements.each(function(filter){
    if(settings.get(filter.id) != currentFilters.get(filter.id)) {
      changed = true;
    }
  });
  return changed;
};

<% end -%>
