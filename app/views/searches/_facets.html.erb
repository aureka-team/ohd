<div class="baseListBox">

  <% javascript_tag do %>
    var checkedCategories = [];
  <% end %>

  <% remote_form_for facets,
                     :url => new_search_path,
                     :method => :get,
                     :html => { :action => new_search_path,
                                :method => :get,
                                :before => "clearFulltextField('searchInput');",
                                :name => "searchFacets",
                                :id => "search_facets" } do |search_facets| %>

    <div class="fragmentTitle">
        <span class="searchString">Volltextsuche</span>
        <% search_facets.object.fulltext ||= t('search_term') %>
        <%= search_facets.text_field :fulltext, :size => 30, :id => 'searchInput', :class => 'baseInputSearch', :title => 'Suchbegriff bitte hier eingeben', :onFocus => "clearFulltextField('searchInput');" %>
        <%= search_facets.submit 'suchen', :class => 'search', :id => 'searchButton', :alt => 'suchen', :type => :image, :src => '/images/suchpfeil.gif' %>
    </div>

    <noscript>
      <div class="warning">
        <h4>Bitte aktivieren Sie Javascript, um die interaktive Suche zu nutzen.</h4>
      </div>
    </noscript>

    <% facets.query_facets.each do |facet| %>
    <%= render :partial => '/searches/active_facet', :object => facet.first, :locals => { :query => facet.last } %>
    <% end %>

    <% facets.unqueried_facets.each do |facet| %>
    <%= render :partial => '/searches/facet_option', :object => facet, :locals => { :search_facets => search_facets, :category_facet => facets.send(facet.first).is_a?(Array)} %>
    <% end %>

  <% end %>

    <% javascript_tag do %>

        var categoryElems = $$('fieldset.facet-field');

        var test = '';

        // clearing the fulltext field before submission or editing
        function clearFulltextField(id) {
          var elem = $(id);
          if(elem) {
            if(elem.value == '<%= t('search_term') %>') {
              elem.value = '';
            }
          }
        }

        // blind effect for category facets
        var blindStatus = new Array(categoryElems.length);
        function toggleCategory(id, blindToggle) {
          var cat_index = -1;
          for(var i=0; i< categoryElems.length; i++) {
            if (id == categoryElems[i].id) {
                cat_index = i;
            }
          }
          if(cat_index > -1) {
            if(blindStatus[cat_index] != 1) {
              // show
              if(blindToggle) {
                Effect.BlindDown(id, { duration: 0.4, transition: Effect.Transitions.sinoidal });
                blindStatus[cat_index] = 1;
              } else {
                Element.show(id);
              }
              Element.hide(id + '_closed');
              Element.show(id + '_open');
            } else {
              // hide
              if(blindToggle) {
                Effect.BlindUp(id, { duration: 0.4, transition: Effect.Transitions.sinoidal });
                blindStatus[cat_index] = 0;
              } else {
                Element.hide(id);
              }
              Element.show(id + '_closed');
              Element.hide(id + '_open');
            }
          }
        };

        function categoryState(id, state, checkbox) {
            var input = $(id);
            if(checkbox) {
                input.checked = state;
            } else {
                input.value = '';
            }
        };

        checkedCategories.each(function(id) {
            categoryState(id, true);
        });

    <% end %>

</div>