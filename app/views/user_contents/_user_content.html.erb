<% if defined?(@user_content_index) && @user_content_index.is_a?(Numeric)
   @user_content_index += 1
else
  @user_content_index = 0
end -%>
<% @interface_status = if params['interface_status'].blank?
    @user_content_index > 2 ? ' closed' : 'open'
    else
    params['interface_status'].downcase
end -%>

<div id="user_content_<%= user_content.id -%>" class="item<%= @interface_status.blank? ? '' : " #{@interface_status}" -%>">
  <div class="handle">
    <a href="#"><%= @user_content_index + 1 -%>.</a>
  </div>
    <div class="header <%= user_content.class.to_s.underscore -%>">
      <span class="title">
        <%= in_place_edit_for user_content, :title -%>
        <a name="user_content_<%= user_content.id -%>" style="display: none;">&nbsp;</a>
      </span>
      <% unless user_content.tag_list.empty? -%>
        <% expanded_tags = user_content.tag_list.join(', ') -%>
      <span class="themes" title='<%= expanded_tags.length > 45 ? expanded_tags : '' -%>'>
        <%= truncate(expanded_tags, :length => 45) %>
      </span>
      <% end -%>
      <span class="toggle">
        <%= link_to_function '&nbsp;', '' -%>
      </span>
      <span class="date">
        <%= user_content.created_at.strftime('%d.%m.%Y - %H:%M') -%>
      </span>
    </div>
    <div class="details">
        <%= link_to_function t(:edit, :scope => "user_interface.actions"), "setItemStatus(this.parentNode.down('.actions'), true); Event.stop(event);", :class => 'edit' %>
        <div id="user_content_<%= user_content.id -%>_actions" class="actions closed">
          <%= link_to_function image_tag('/images/icon_cross.png'), "setItemStatus(this.parentNode, false); Event.stop(event);", :class => 'close-button' -%>
          <ul>
            <li><%= link_to t(:view, :scope => 'user_interface.user_content'), user_content.link_url, :target => '_blank' %></li>
            <li><hr/></li>
            <li><%= link_to_function t(:edit, :scope => 'user_interface.user_content'), "this.up('.item').getElementsBySelector('.inline-editable').each(function(el){showInlineEditForm(el.id.sub(/_display$/,''), (el.nodeType == 'textarea'));}); setItemStatus(this.up('.actions'), false)" %></li>
            <li><%= link_to "#{t(:topics, :scope => 'user_interface.user_content')}...", '#', :onclick => "$('user_content_#{user_content.id}_actions').addClassName('closed');#{javascript_open_modal_window(topics_user_content_path(user_content, :context => 'user_contents'), { :method => :get })}" %></li>
            <% if user_content.class.to_s == 'UserAnnotation' -%>
                <% if user_content.private? -%>
                    <li><%= link_to t(:publish, :scope => 'user_interface.user_content'), '#', :onclick => "$('user_content_#{user_content.id}_actions').addClassName('closed');#{javascript_open_modal_window(publish_notice_user_content_path(user_content, :context => 'user_contents', :type => 'UserAnnotation'), { :method => :get })}" %></li>
                <% else -%>
                    <li><%#= link_to_remote t(:retract, :scope => 'user_interface.user_content'), :url => retract_user_content_path(user_content, :type => 'UserAnnotation'), :method => :post, :before => visual_effect(:appear, "shades", :duration => 0.4, :to => 0.6), :confirm => t(:confirm_retract_content, :scope => "user_interface.messages", :content => user_content.class.to_s.constantize.human_name_in_sentence + ' "' + (user_content.title || '') + '"') %></li>
                <% end -%>
            <% end -%>
            <li><%#= link_to_remote t(:delete, :scope => 'user_interface.user_content'), :url => user_content_path(user_content), :method => :delete, :before => visual_effect(:fade, "user_content_#{user_content.id}_actions", :duration => 0.4), :confirm => t(:delete_content, :scope => "user_interface.messages", :content => '"' + (user_content.title || '') + '"') %></li>
          </ul>
        </div>
        <ul class="properties">
          <% unless (user_content.class.to_s != 'Search' && user_content.reference.nil?) || (user_content.class.to_s == 'Search' && user_content.properties['query'].nil?) -%>
              <% case user_content
                  when Search
                    %>
                <li class="query">
                  <%= label_tag UserContent.human_attribute_name(:query) -%>
                  <p><%= query_hash_to_string user_content.properties['query'] -%></p>
                </li>
              <% when InterviewReference -%>
                <li class="language_info">
                  <%= label_tag t((user_content.reference.video? ? :video_interview : :audio_interview), :scope => 'user_interface.labels') %>
                  <p>
                    <%= user_content.reference.language -%>&nbsp;
                    <% unless user_content.reference.language == 'Deutsch' -%>
                    (<%= user_content.reference.translated? ? t(:translated, :scope => 'status') : t(:not_translated, :scope => 'status') %>)
                    <% end -%>
                    <br/>
                    <%= user_content.reference.duration.minimal -%>
                  </p>
                </li>
              <% when UserAnnotation -%>
                <% interview = user_content.reference.interview -%>
                <li class="language_info">
                    <%= label_tag t((interview.video? ? :video_interview : :audio_interview), :scope => 'user_interface.labels') %>
                    <p>
                      <%= interview.language -%>&nbsp;
                      <% unless interview.language == 'Deutsch' -%>
                          (<%= interview.translated? ? t(:translated, :scope => 'status') : t(:not_translated, :scope => 'status') %>)
                      <% end -%>
                    </p>
                  </li>
                <li class="segment_info">
                  <%= label_tag Segment.human_name -%>
                  <p><%= Tape.human_name -%>&nbsp;<%= user_content.reference.tape.number -%>
                    &nbsp;<%=  timecode_without_tape user_content.reference.timecode %>
                    [<%= user_content.reference.media_id -%>]
                  </p>
                <li>
                <li class="publication_info">
                  <%= label_tag :workflow_state, UserAnnotation.human_attribute_name(:workflow_state) -%>
                  <p><%= t(user_content.workflow_state, :scope => "user_annotations.workflow_states") -%></p>
                </li>
              <%  else
                    false
              end %>
          <% end -%>
          <li class="description">
            <% if user_content.class.to_s == 'UserAnnotation' -%>
                <%= label_tag UserAnnotation.human_attribute_name(:description) -%>
                <% if user_content.private? -%>
                    <p><%= in_place_edit_for(user_content, :description, :text_area => true) -%></p>
                <% else -%>
                    <p><%= user_content.description -%></p>
                <% end -%>
            <% else -%>
                <%= label_tag UserContent.human_attribute_name(:description) -%>
                <p><%= in_place_edit_for(user_content, :description, :text_area => true) -%></p>
            <% end -%>
          </li>
        </ul>
      <div class="<%= user_content.class.to_s == 'Search' ? 'references' : 'reference' -%>">
        <%= case user_content
            when Search
              reference_details_for_search(user_content)
            when InterviewReference
              reference_details_for_interview(user_content.reference)
            when UserAnnotation
              reference_details_for_segment(user_content)
            else
              ''
          end %>
      </div>
    </div>

    <% javascript_tag do %>
        Event.observe($('user_content_<%= user_content.id -%>').down('.header'), 'click', toggleUserContent);
        contentItems = $$('#user_contents .item .details');
    <% end %>
</div>
